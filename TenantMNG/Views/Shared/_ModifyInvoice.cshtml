@model TenantMNG.ViewModel.InvoiceVM


@using (Html.BeginForm("ModifyInvoice", "PM", FormMethod.Post, new { @class = "form-horizontal", @id = "formcontact" }))
{

    if (ViewBag._erromsg >= 1)
    {
        <div class="alert alert-success">
            @TenantMNG.Resource.invoice_success
        </div>}
    else if (ViewBag._erromsg == 0)
    {

        <div class="alert alert-danger">
            @TenantMNG.Resource.invoce_failure
        </div>}
    else if (ViewBag._erromsg == -2)
    {
        <div class="alert alert-danger">
            @TenantMNG.Resource.invoce_failure
        </div>

    }

    <div class="clearfix"></div>
    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.date_s_bill_date, new { @class = "control-label" })

            <div class="controls">

                @Html.TextBoxFor(m => m.date_s_bill_date, "{0:yyyy/MM/dd}", new { @class = "span8" })
                @Html.ValidationMessageFor(m => m.date_s_bill_date)

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.date_e_bill_date, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.date_e_bill_date, "{0:yyyy/MM/dd}", new { @class = "span8", @onchange = "getRatesData();" })
                @Html.ValidationMessageFor(m => m.date_e_bill_date)

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.date_pay_date, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.date_pay_date, "{0:yyyy/MM/dd}", new { @class = "span8" })
                @Html.ValidationMessageFor(m => m.date_pay_date)

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.demanda_base, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.demanda_base, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.demanda_intermedia, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.demanda_intermedia, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.demanda_punta, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.demanda_punta, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.lectura_energia_base_anterior, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.lectura_energia_base_anterior, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.lectura_energia_base_actual, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.lectura_energia_base_actual, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>


    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.dec_base_energy, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.dec_base_energy, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.lectura_energia_intermedia_anterior, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.lectura_energia_intermedia_anterior, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.lectura_energia_intermedia_actual, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.lectura_energia_intermedia_actual, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.dec_inter_energy, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.dec_inter_energy, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.lectura_energia_punta_anterior, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.lectura_energia_punta_anterior, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.lectura_energia_punta_actual, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.lectura_energia_punta_actual, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.dec_peak_energy, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.dec_peak_energy, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.lectura_energia_reactiva_anterior, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.lectura_energia_reactiva_anterior, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.lectura_energia_reactiva_actual, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.lectura_energia_reactiva_actual, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>

    <div class="span3">
        <div class="control-group">
            @Html.LabelFor(m => m.energia_reactiva, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.energia_reactiva, new { @class = "float-right", @onkeypress = "return isDecimalNumberKey(event)", @onchange = "getEnergyData()" })

            </div>
        </div>
    </div>


    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.dec_base_rate, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.dec_base_rate, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.dec_inter_energy_rate, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.dec_inter_energy_rate, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.dec_peak_energy_rate, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.dec_peak_energy_rate, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.distribucion, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.distribucion, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.tarifa_transmision, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.tarifa_transmision, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.operacion_cenace, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.operacion_cenace, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.cre_servicios_conexos, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.cre_servicios_conexos, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.capacidad, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.capacidad, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.suministro, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.suministro, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" })

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_suministro, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_suministro, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_distribucion, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_distribucion, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_transmision, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_transmision, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_cenace, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_cenace, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_energia, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_energia, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_capacidad, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_capacidad, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_cre_servicios_conexos, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_cre_servicios_conexos, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_dos_porciento_baja_tension, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_dos_porciento_baja_tension, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.precio_decuento_bonificacion, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.precio_decuento_bonificacion, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.dec_tax_amt, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.dec_tax_amt, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>

    <div class="span5">
        <div class="control-group">
            @Html.LabelFor(m => m.dec_total, new { @class = "control-label" })

            <div class="controls">
                @Html.TextBoxFor(m => m.dec_total, new { @class = "span8", @onkeypress = "return isDecimalNumberKey(event)", @readonly = "readonly" }) ($)

            </div>
        </div>
    </div>



    <div class="clearfix"></div>

    <div class="span11">
        <br />
        <table class="table table-striped table-bordered table-hover" id="datatable_orders" style="display:none">
            <thead>
                <tr role="row" class="heading">
                    <th width="15%">
                        @Resource.meter_name
                    </th>
                    <th width="10%">
                        @Resource.peak_energy
                    </th>
                    <th width="10%">
                        @Resource.dec_peak_energy_rate
                    </th>
                    <th width="10%">
                        @Resource.energia_activa
                    </th>
                    <th width="10%">
                        @Resource.dec_inter_energy
                    </th>
                    <th width="10%">
                        @Resource.dec_inter_energy_rate
                    </th>
                    <th width="10%">
                        @Resource.energia_reactiva
                    </th>
                    <th width="10%">
                        @Resource.dec_base_energy
                    </th>
                    <th width="10%">
                        @Resource.dec_base_rate
                    </th>
                    <th width="10%">
                        @Resource.final_amout
                    </th>
                </tr>
            </thead>
            <tbody id="contacts"></tbody>
        </table>
    </div>
    <div class="clearfix"></div>
    <br />

    @Html.HiddenFor(m => m.int_invoice_id)

    // @Html.HiddenFor(m => m.int_meter_id)
    @Html.HiddenFor(m => m.int_tenant_id)
    @Html.HiddenFor(m => m.str_meter_id)
    @Html.HiddenFor(m => m.int_invoice_period)
    @Html.HiddenFor(m => m.bit_tenant_active)
    @Html.HiddenFor(m => m.str_inter_e_time)
    @Html.HiddenFor(m => m.str_inter_s_time)
    @Html.HiddenFor(m => m.str_peak_e_time)
    @Html.HiddenFor(m => m.str_peak_s_time)
    @Html.HiddenFor(m => m.energia_activa)
    //@Html.HiddenFor(m => m.energia_reactiva)
    @Html.HiddenFor(m => m.dec_base_amt)
    @Html.HiddenFor(m => m.dec_inter_energy_amt)
    @Html.HiddenFor(m => m.dec_peak_energy_amt)

    <div class="form-actions">
        @*<input type="submit" class="btn btn-success" value="Save" />*@
        <input type="submit" id="btnsave"
               value="@TenantMNG.Resource.save_info" class="btn btn-success" />
        @Html.ActionLink(TenantMNG.Resource.cancel, "InvoiceMeters", "PM", new { @class = "btn btn-default" })
    </div>

}






